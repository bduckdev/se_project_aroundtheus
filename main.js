!function(){"use strict";const e=[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],t=document.querySelector("#profile-edit-button"),r=document.querySelector("#profile-edit-modal"),s=(document.querySelector("#profile-name"),document.querySelector("#profile-description"),document.querySelector("#profile-name-input")),o=document.querySelector("#profile-description-input"),n=document.querySelector(".profile__add-button"),a=document.querySelector("#add-card-modal"),i=(document.querySelector("#add-card-title-input"),document.querySelector("#add-card-image-input"),document.querySelector("#view-image-modal"),document.querySelector("#image-modal-text"),document.querySelector("#image-modal-image"),document.querySelectorAll(".modal"),document.querySelectorAll("form"),document.querySelector(".gallery__container"),document.querySelector(".profile__avatar")),l=(document.querySelector("#avatar"),document.querySelector("#avatar-edit-modal")),c=document.querySelector("#delete-image-modal");class d{constructor(e,t,r,s,o){let{name:n,link:a,_id:i,isLiked:l}=e;this._name=n,this._link=a,this._id=i,this.isLiked=l,this._cardSelector=t,this._handleImageClick=r,this._handleDeleteButton=s,this._handleLikeButton=o}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeButton(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteButton(this)})),this.cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this)}))}removeCard(){this._cardEl.remove(),this._cardEl=null}_checkLiked(){this.isLiked&&this._toggleLikedClass()}_toggleLikedClass(){this._likeButton.classList.toggle("card__button_active")}likeCard(){this._toggleLikedClass(),this.isLiked=!this.isLiked}getView(){return this._cardEl=document.querySelector(this._cardSelector).content.cloneNode(!0).querySelector(".card"),this._id,this.cardImageEl=this._cardEl.querySelector("#card-image"),this.cardTitleEl=this._cardEl.querySelector("#card-title"),this._likeButton=this._cardEl.querySelector("#card-button"),this._deleteButton=this._cardEl.querySelector("#card-delete"),this.cardTitleEl.innerText=this._name,this.cardImageEl.src=this._link,this.cardImageEl.alt=this._name,this._checkLiked(),this._setEventListeners(),this._cardEl}}class h{constructor(e,t){this._config=e,this._targetForm=t}_showInputError(e){const t=this._targetForm.querySelector(`#${e.id}-error`);e.classList.add(this._config.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._config.errorClass)}_hideInputError(e){const t=this._targetForm.querySelector(`#${e.id}-error`);e.classList.remove(this._config.inputErrorClass),t.textContent="",t.classList.remove(this._config.errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_toggleButtonState(e,t){let r=!1;e.forEach((e=>{e.validity.valid||(r=!0)})),r?this.disableSubmitButton():(t.classList.remove(this._config.inactiveButtonClass),t.disabled=!1)}_setEventListeners(){const e=this._config.inputSelector,t=[...this._targetForm.querySelectorAll(e)],r=this._targetForm.querySelector(this._config.submitButtonSelector);this._toggleButtonState(t,r),t.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(t,r)}))}))}enableValidation(){this._targetForm.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(this._targetForm)}disableSubmitButton(){const e=this._targetForm.querySelector(this._config.submitButtonSelector);e.classList.add(this._config.inactiveButtonClass),e.disabled=!0}}class u{constructor(e){let{modalSelector:t}=e;this._modalElement=document.querySelector(t)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleCloseClick=e=>{e.target.classList.contains("modal_opened")&&this.close(),e.target.classList.contains("modal__close")&&this.close()};_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._modalElement.addEventListener("click",this._handleCloseClick)}}class m extends u{constructor(e){let{modalSelector:t,handleFormSubmit:r}=e;super({modalSelector:t}),this._modalForm=this._modalElement.querySelector(".modal__form"),this._handleFormSubmit=r}_getInputValues(){const e=[...this._modalForm.querySelectorAll(".modal__input")],t={};return e.forEach((e=>{const r=e.name,s=e.value;t[r]=s})),t}setEventListeners(){this._modalForm.addEventListener("submit",(e=>{const t=this._getInputValues();this._handleFormSubmit(e,t)})),super.setEventListeners()}close(){this._modalForm.reset(),super.close()}}const _=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserData(){return fetch(`${this._baseUrl}/users/me`,{headers:{authorization:this._headers.authorization}}).then((e=>this._checkResponse(e)))}updateProfileInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((e=>this._checkResponse(e)))}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>this._checkResponse(e)))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>this._checkResponse(e)))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>this._checkResponse(e)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers,body:JSON.stringify({_id:e})}).then((e=>this._checkResponse(e)))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers,body:JSON.stringify({_id:e})}).then((e=>this._checkResponse(e)))}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers,body:JSON.stringify({_id:e})}).then((e=>this._checkResponse(e)))}initialLoad(){const e=this.getUserData(),t=this.getInitialCards();return Promise.all([e,t]).then((e=>e))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1/",headers:{authorization:"32a0da8c-2dd8-41c5-9cc6-63c733b86137","Content-Type":"application/json"}}),p=new m({modalSelector:"#profile-edit-modal",handleFormSubmit:function(e,t){e.preventDefault(),r.querySelector(".modal__button").innerText="Saving...";const s=t.Name,o=t.Description;return _.updateProfileInfo(s,o).then((()=>{y.setUserInfo(s,o),q["profile-edit-form"].disableSubmitButton()})).then((()=>{p.close()})).finally((()=>{r.querySelector(".modal__button").innerText="Save"})).catch((e=>{console.error(e)}))}}),S=new m({modalSelector:"#avatar-edit-modal",handleFormSubmit:function(e,t){e.preventDefault(),l.querySelector(".modal__button").innerText="Saving...";const r=t.Avatar;return _.updateAvatar(r).then((()=>{y.setAvatar(r)})).then((()=>{q["avatar-form"].disableSubmitButton(),S.close()})).finally((()=>{l.querySelector(".modal__button").innerText="Save"})).catch((e=>{console.error(e)}))}}),g=new m({modalSelector:"#add-card-modal",handleFormSubmit:function(e,t){e.preventDefault(),a.querySelector(".modal__button").innerText="Saving...";const r=t.Title,s=t["Image Link"];return _.addCard({name:r,link:s}).then((e=>e)).then((e=>{const t=L(e);w.addItem(t),q["add-card-form"].disableSubmitButton(),S.close()})).then((()=>{g.close()})).finally((()=>{a.querySelector(".modal__button").innerText="Save"})).catch((e=>{console.error(e)}))}}),v=new class extends u{constructor(e){let{modalSelector:t}=e;super({modalSelector:t}),this._image=document.querySelector("#image-modal-image"),this._caption=document.querySelector("#image-modal-text")}open(e){this._image.src=e.cardImageEl.src,this._image.alt=e.cardImageEl.alt,this._caption.textContent=e.cardTitleEl.textContent,super.open()}}({modalSelector:"#view-image-modal"}),f=new class extends u{constructor(e,t){let{modalSelector:r,cardRemovalHandler:s}=e;super({modalSelector:r}),this._deleteButton=document.getElementById("delete-image-confirm"),this._cardRemovalHandler=s,this.card=t}open(e){super.open(),this._deleteButton.innerText="Yes",this.card=e}_handleCardRemoval=()=>{this._cardRemovalHandler(this.card)};setEventListeners(){this._deleteButton.addEventListener("click",this._handleCardRemoval),super.setEventListeners()}close(){this.card=void 0,super.close()}}({modalSelector:"#delete-image-modal",cardRemovalHandler:function(e){return c.querySelector(".modal__button").innerText="Saving...",_.deleteCard(e._id).then((()=>{e.removeCard()})).then((()=>{f.close()})).finally((()=>{c.querySelector(".modal__button").innerText="Yes"})).catch((e=>{console.error(e)}))},card:void 0}),y=new class{constructor(e){let{nameSelector:t,descriptionSelector:r,avatarSelector:s}=e;this.nameEl=document.querySelector(t),this.descriptionEl=document.querySelector(r),this.avatarEl=document.querySelector(s)}getUserInfo(){return{name:this.nameEl.innerText,description:this.descriptionEl.innerText}}setUserInfo(e,t){this.nameEl.textContent=e,this.descriptionEl.textContent=t}setAvatar(e){this.avatarEl.src=e}}({nameSelector:"#profile-name",descriptionSelector:"#profile-description",avatarSelector:"#avatar"});function E(e){f.card=e,f.open(e)}function k(e){return e.isLiked?_.unlikeCard(e._id).then((()=>{e.likeCard()})).catch((e=>{console.error(e)})):_.likeCard(e._id).then((()=>{e.likeCard()})).catch((e=>{console.error(e)}))}function b(e){v.open(e)}function L(e){let{name:t,link:r,_id:s,isLiked:o}=e;return new d({name:t,link:r,_id:s,isLiked:o},"#card-template",b,E,k).getView()}t.addEventListener("click",(()=>{p.open();const e=y.getUserInfo();s.value=e.name,o.value=e.description})),n.addEventListener("click",(()=>{g.open()})),i.addEventListener("click",(()=>{S.open()}));const q={};var C;C={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(C.formSelector)).forEach((e=>{const t=new h(C,e),r=e.getAttribute("name");q[r]=t,t.enableValidation()})),g.setEventListeners(),p.setEventListeners(),v.setEventListeners(),S.setEventListeners(),f.setEventListeners();const w=new class{constructor(e,t){let{items:r,renderer:s}=e;this.items=r,this.renderer=s,this.selector=t}addItem(e){document.querySelector(this.selector).prepend(e)}renderItems(){this.items.forEach((e=>{const t=this.renderer(e);this.addItem(t)}))}}({items:[],renderer:L},"#gallery-container");_.initialLoad().then((e=>(function(e){let{name:t,about:r,avatar:s}=e;y.setUserInfo(t,r),y.setAvatar(s)}(e[0]),e))).then((t=>{var r;return 0!=(r=t[1]).length?(w.items=r,w.renderItems()):(console.log("Gallery empty. Loading default cards..."),w.items=function(){const t=[];return e.forEach((e=>{_.addCard(e).finally((e=>{t.push(e)})).catch((e=>{console.error(e)}))})),t}(),w.renderItems()),t})).catch((e=>{console.error(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,