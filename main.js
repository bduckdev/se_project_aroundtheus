!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=document.querySelector("#profile-edit-button"),o=document.querySelector("#profile-edit-modal"),n=(document.querySelector("#profile-name"),document.querySelector("#profile-description"),document.querySelector("#profile-name-input")),r=document.querySelector("#profile-description-input"),s=document.querySelector(".profile__add-button"),i=document.querySelector("#add-card-modal");document.querySelector("#add-card-title-input"),document.querySelector("#add-card-image-input"),document.querySelector("#view-image-modal"),document.querySelector("#image-modal-text"),document.querySelector("#image-modal-image"),document.querySelectorAll(".modal"),document.querySelectorAll("form"),document.querySelector(".gallery__container");class a{constructor(e,t,o){let{name:n,link:r}=e;this._name=n,this._link=r,this._cardSelector=t,this._handleImageClick=o}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeButton()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteButton()})),this.cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this)}))}_handleLikeButton(){this._likeButton.classList.toggle("card__button_active")}_handleDeleteButton(){this._cardEl.remove(),this._cardEl=null}getView(){return this._cardEl=document.querySelector(this._cardSelector).content.cloneNode(!0).querySelector(".card"),this.cardImageEl=this._cardEl.querySelector("#card-image"),this.cardTitleEl=this._cardEl.querySelector("#card-title"),this._likeButton=this._cardEl.querySelector("#card-button"),this._deleteButton=this._cardEl.querySelector("#card-delete"),this.cardTitleEl.innerText=this._name,this.cardImageEl.src=this._link,this.cardImageEl.alt=this._name,this._setEventListeners(),this._cardEl}}class l{constructor(e,t){this._config=e,this._targetForm=t}_showInputError(e){const t=this._targetForm.querySelector(`#${e.id}-error`);e.classList.add(this._config.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._config.errorClass)}_hideInputError(e){const t=this._targetForm.querySelector(`#${e.id}-error`);e.classList.remove(this._config.inputErrorClass),t.textContent="",t.classList.remove(this._config.errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_toggleButtonState(e,t){let o=!1;e.forEach((e=>{e.validity.valid||(o=!0)})),o?this.disableSubmitButton():(t.classList.remove(this._config.inactiveButtonClass),t.disabled=!1)}_setEventListeners(){const e=this._config.inputSelector,t=[...this._targetForm.querySelectorAll(e)],o=this._targetForm.querySelector(this._config.submitButtonSelector);this._toggleButtonState(t,o),t.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(t,o)}))}))}enableValidation(){this._targetForm.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(this._targetForm)}disableSubmitButton(){const e=this._targetForm.querySelector(this._config.submitButtonSelector);e.classList.add(this._config.inactiveButtonClass),e.disabled=!0}}class c{constructor(e){let{modalSelector:t}=e;this._modalElement=document.querySelector(t)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleCloseClick=e=>{e.target.classList.contains("modal_opened")&&this.close(),e.target.classList.contains("modal__close")&&this.close()};_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._modalElement.addEventListener("click",this._handleCloseClick)}}class d extends c{constructor(e){let{modalSelector:t,handleFormSubmit:o}=e;super({modalSelector:t}),this._modalForm=this._modalElement.querySelector(".modal__form"),this._handleFormSubmit=o}_getInputValues(){const e=[...this._modalForm.querySelectorAll(".modal__input")],t={};return e.forEach((e=>{const o=e.name,n=e.value;t[o]=n})),t}setEventListeners(){this._modalForm.addEventListener("submit",(e=>{const t=this._getInputValues();this._handleFormSubmit(e,t),this.close()})),super.setEventListeners()}close(){this._modalForm.reset(),super.close()}}const m=new d({modalSelector:"#profile-edit-modal",handleFormSubmit:function(e,t){e.preventDefault();const o=t.Name,n=t.Description;_.setUserInfo(o,n),E.disableSubmitButton()}}),u=new d({modalSelector:"#add-card-modal",handleFormSubmit:function(e,t){e.preventDefault();const o=g({name:t.Title,link:t["Image Link"]});y.addItem(o),S.disableSubmitButton()}}),h=new class extends c{constructor(e){let{modalSelector:t}=e;super({modalSelector:t}),this._image=document.querySelector("#image-modal-image"),this._caption=document.querySelector("#image-modal-text")}open(e){this._image.src=e.cardImageEl.src,this._image.alt=e.cardImageEl.alt,this._caption.textContent=e.cardTitleEl.textContent,super.open()}}({modalSelector:"#view-image-modal"}),_=new class{constructor(e){let{nameSelector:t,descriptionSelector:o}=e;this.nameEl=document.querySelector(t),this.descriptionEl=document.querySelector(o)}getUserInfo(){return{name:this.nameEl.innerText,description:this.descriptionEl.innerText}}setUserInfo(e,t){this.nameEl.textContent=e,this.descriptionEl.textContent=t}}({nameSelector:"#profile-name",descriptionSelector:"#profile-description"});function p(e){h.open(e)}function g(e){let{name:t,link:o}=e;return new a({name:t,link:o},"#card-template",p).getView()}t.addEventListener("click",(()=>{m.open();const e=_.getUserInfo();n.value=e.name,r.value=e.description})),s.addEventListener("click",(()=>{u.open()}));const S=new l(e,i);S.enableValidation();const E=new l(e,o);E.enableValidation(),u.setEventListeners(),m.setEventListeners(),h.setEventListeners();const y=new class{constructor(e,t){let{items:o,renderer:n}=e;this.items=o,this.renderer=n,this.selector=t}addItem(e){document.querySelector(this.selector).prepend(e)}renderItems(){this.items.forEach((e=>{const t=this.renderer(e);this.addItem(t)}))}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:g},"#gallery-container");y.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,